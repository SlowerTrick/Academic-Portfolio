==94165== Memcheck, a memory error detector
==94165== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==94165== Using Valgrind-3.24.0 and LibVEX; rerun with -h for copyright info
==94165== Command: Resultados/Artur/completo/prog Resultados/Artur/completo/Casos/1
==94165== Parent PID: 94164
==94165== 
==94165== Use of uninitialised value of size 8
==94165==    at 0x49A325F: __vfscanf_internal (vfscanf-internal.c:1976)
==94165==    by 0x4992405: __isoc99_scanf (isoc99_scanf.c:30)
==94165==    by 0x401527: lerLivro (in /home/SlowerTrick/Desktop/gdb/TAD_10/Resultados/Artur/completo/prog)
==94165==    by 0x401703: main (in /home/SlowerTrick/Desktop/gdb/TAD_10/Resultados/Artur/completo/prog)
==94165== 
==94165== Invalid write of size 4
==94165==    at 0x49A325F: __vfscanf_internal (vfscanf-internal.c:1976)
==94165==    by 0x4992405: __isoc99_scanf (isoc99_scanf.c:30)
==94165==    by 0x401527: lerLivro (in /home/SlowerTrick/Desktop/gdb/TAD_10/Resultados/Artur/completo/prog)
==94165==    by 0x401703: main (in /home/SlowerTrick/Desktop/gdb/TAD_10/Resultados/Artur/completo/prog)
==94165==  Address 0x3010102 is not stack'd, malloc'd or (recently) free'd
==94165== 
==94165== 
==94165== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==94165==  Access not within mapped region at address 0x3010102
==94165==    at 0x49A325F: __vfscanf_internal (vfscanf-internal.c:1976)
==94165==    by 0x4992405: __isoc99_scanf (isoc99_scanf.c:30)
==94165==    by 0x401527: lerLivro (in /home/SlowerTrick/Desktop/gdb/TAD_10/Resultados/Artur/completo/prog)
==94165==    by 0x401703: main (in /home/SlowerTrick/Desktop/gdb/TAD_10/Resultados/Artur/completo/prog)
==94165==  If you believe this happened as a result of a stack
==94165==  overflow in your program's main thread (unlikely but
==94165==  possible), you can try to increase the size of the
==94165==  main thread stack using the --main-stacksize= flag.
==94165==  The main thread stack size used in this run was 8388608.
==94165== 
==94165== HEAP SUMMARY:
==94165==     in use at exit: 4,096 bytes in 1 blocks
==94165==   total heap usage: 1 allocs, 0 frees, 4,096 bytes allocated
==94165== 
==94165== LEAK SUMMARY:
==94165==    definitely lost: 0 bytes in 0 blocks
==94165==    indirectly lost: 0 bytes in 0 blocks
==94165==      possibly lost: 0 bytes in 0 blocks
==94165==    still reachable: 4,096 bytes in 1 blocks
==94165==         suppressed: 0 bytes in 0 blocks
==94165== Reachable blocks (those to which a pointer was found) are not shown.
==94165== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==94165== 
==94165== Use --track-origins=yes to see where uninitialised values come from
==94165== For lists of detected and suppressed errors, rerun with: -s
==94165== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
