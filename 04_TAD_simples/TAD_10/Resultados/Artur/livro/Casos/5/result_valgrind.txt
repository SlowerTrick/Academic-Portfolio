==96965== Memcheck, a memory error detector
==96965== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==96965== Using Valgrind-3.24.0 and LibVEX; rerun with -h for copyright info
==96965== Command: Resultados/Artur/livro/prog Resultados/Artur/livro/Casos/5
==96965== Parent PID: 96964
==96965== 
==96965== Use of uninitialised value of size 8
==96965==    at 0x49A325F: __vfscanf_internal (vfscanf-internal.c:1976)
==96965==    by 0x4992405: __isoc99_scanf (isoc99_scanf.c:30)
==96965==    by 0x401820: lerLivro (in /home/SlowerTrick/Desktop/gdb/TAD_10/Resultados/Artur/livro/prog)
==96965==    by 0x401A7A: main (in /home/SlowerTrick/Desktop/gdb/TAD_10/Resultados/Artur/livro/prog)
==96965== 
==96965== Invalid write of size 4
==96965==    at 0x49A325F: __vfscanf_internal (vfscanf-internal.c:1976)
==96965==    by 0x4992405: __isoc99_scanf (isoc99_scanf.c:30)
==96965==    by 0x401820: lerLivro (in /home/SlowerTrick/Desktop/gdb/TAD_10/Resultados/Artur/livro/prog)
==96965==    by 0x401A7A: main (in /home/SlowerTrick/Desktop/gdb/TAD_10/Resultados/Artur/livro/prog)
==96965==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==96965== 
==96965== 
==96965== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==96965==  Access not within mapped region at address 0x0
==96965==    at 0x49A325F: __vfscanf_internal (vfscanf-internal.c:1976)
==96965==    by 0x4992405: __isoc99_scanf (isoc99_scanf.c:30)
==96965==    by 0x401820: lerLivro (in /home/SlowerTrick/Desktop/gdb/TAD_10/Resultados/Artur/livro/prog)
==96965==    by 0x401A7A: main (in /home/SlowerTrick/Desktop/gdb/TAD_10/Resultados/Artur/livro/prog)
==96965==  If you believe this happened as a result of a stack
==96965==  overflow in your program's main thread (unlikely but
==96965==  possible), you can try to increase the size of the
==96965==  main thread stack using the --main-stacksize= flag.
==96965==  The main thread stack size used in this run was 8388608.
==96965== 
==96965== HEAP SUMMARY:
==96965==     in use at exit: 8,192 bytes in 2 blocks
==96965==   total heap usage: 2 allocs, 0 frees, 8,192 bytes allocated
==96965== 
==96965== LEAK SUMMARY:
==96965==    definitely lost: 0 bytes in 0 blocks
==96965==    indirectly lost: 0 bytes in 0 blocks
==96965==      possibly lost: 0 bytes in 0 blocks
==96965==    still reachable: 8,192 bytes in 2 blocks
==96965==         suppressed: 0 bytes in 0 blocks
==96965== Reachable blocks (those to which a pointer was found) are not shown.
==96965== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==96965== 
==96965== Use --track-origins=yes to see where uninitialised values come from
==96965== For lists of detected and suppressed errors, rerun with: -s
==96965== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
